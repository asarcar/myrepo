##############################################
# Sample client-side OpenVPN 2.0 config file #
# for connecting to multi-client server.     #
#                                            #
# This configuration can be used by multiple #
# clients, however each client should have   #
# its own cert and key files.                #
#                                            #
# On Windows, you might want to rename this  #
# file so it has a .ovpn extension           #
##############################################

# Bridge Based VPN: http://www.serverubuntu.it/openvpn-bridge-configuration
# https://help.ubuntu.com/14.04/serverguide/openvpn.html

# Specify that we are a client and that we
# will be pulling certain config file directives
# from the server.
client

# Use the same setting as you are using on
# the server.
# On most systems, the VPN will not function
# unless you partially or fully disable
# the firewall for the TUN/TAP interface.
;dev tun
dev tap

# Windows needs the TAP-Win32 adapter name
# from the Network Connections panel
# if you have more than one.  On XP SP2,
# you may need to disable the firewall
# for the TAP adapter.
;dev-node MyTap

# Are we connecting to a TCP or
# UDP server?  Use the same setting as
# on the server.
;proto tcp
proto udp

# The hostname/IP and port of the server.
# You can have multiple remote entries
# to load balance between the servers.
;remote 76.102.32.230 1194
;remote my-server-2 1194
remote vpnserver.saralnet.com 1194

# Choose a random host from the remote
# list for load-balancing.  Otherwise
# try hosts in the order specified.
;remote-random

# Keep trying indefinitely to resolve the
# host name of the OpenVPN server.  Very useful
# on machines which are not permanently connected
# to the internet such as laptops.
resolv-retry infinite

# Most clients don't need to bind to
# a specific local port number.
nobind

# Try to preserve some state across restarts.
persist-key
persist-tun

# If you are connecting through an
# HTTP proxy to reach the actual OpenVPN
# server, put the proxy server/IP and
# port number here.  See the man page
# if your proxy server requires
# authentication.
;http-proxy-retry # retry on connection failures
;http-proxy [proxy server] [proxy port #]

# Wireless networks often produce a lot
# of duplicate packets.  Set this flag
# to silence duplicate packet warnings.
;mute-replay-warnings

# SSL/TLS parms.
# See the server config file for more
# description.  It's best to use
# a separate .crt/.key file pair
# for each client.  A single ca
# file can be used for all clients.
ca ca.crt
cert asarcar-client.crt
key asarcar-client.key

# Verify server certificate by checking
# that the certicate has the nsCertType
# field set to "server".  This is an
# important precaution to protect against
# a potential attack discussed here:
#  http://openvpn.net/howto.html#mitm
#
# To use this feature, you will need to generate
# your server certificates with the nsCertType
# field set to "server".  The build-key-server
# script in the easy-rsa folder will do this.
ns-cert-type server

# If a tls-auth key is used on the server
# then every client must also have the key.
tls-auth ta.key 1

# Select a cryptographic cipher.
# If the cipher option is used on the server
# then you must also specify it here.
cipher BF-CBC    # Blowfish (default)

# Enable compression on the VPN link.
# Don't enable this unless it is also
# enabled in the server config file.
comp-lzo

# Set log file verbosity.
verb 3

# Silence repeating messages
;mute 20


# obtain a username and password from a connecting client, 
# use that information as a basis for authenticating the client.
auth-user-pass

# script-security level [method]
# Offers policy-level control over OpenVPN's usage of external 
# programs and scripts. Lower level values are more restrictive, 
# higher values are more permissive. Settings for level:
# 2 -- Allow calling of built-in executables and user-defined scripts. 
# The method parameter indicates how OpenVPN should call external 
# commands and scripts. Settings for method:
# execve -- (default) Use execve() function on Unix family OSes 
# and CreateProcess() on Windows. 
# system -- Use system() function (deprecated and less safe since 
# the external program command line is subject to shell expansion).
script-security 2

# Add/Remove VPN learnt DNS: able to run up/down script based on 
# script-security >= 2 level
up /etc/openvpn/update-resolv-conf
down /etc/openvpn/update-resolv-conf

# The update-resolv-conf script fails to restore 
# the original DNS settings if OpenVPN client.conf 
# is set-up to drop root privileges after connection.
# Error Message Sample:
# Closing TUN/TAP interface: /sbin/ip addr del dev tap<id> <ip_addr>
# Operation not permitted
# ip addr del failed: external program exited with error status: 2
# /etc/openvpn/update-resolv-conf tap<id 1500 1574 <ip_addr> <net_mask> init
# rm: cannot remove 'tap<id>.openvpn': Permission denied
# WARNING: Failed running command (--up/--down): external program exited with error status: 1
# Exiting due to fatal error
#
# Downgrade privileges after initialization (non-Windows only)
;user nobody
;group nogroup

